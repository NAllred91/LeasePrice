{"version":3,"sources":["getRawData.js","utils.js","App.js","index.js"],"names":["Promise","resolve","reject","fetch","then","result","json","toc","dataPromises","timestamps","map","timestamp","all","data","catch","err","getAllUnits","units","window","forEach","d","unit","unit_number","Object","keys","getAllUnitsArea","area","getAllAvailableUnits","length","getUnitsData","date","unitData","u","find","i","dateObj","Date","value","getUTCFullYear","getUTCMonth","getDate","price","getUnitPrices","_","compact","App","props","state","hasData","moveInDate","getDifference","prices","getRawData","allUnitsArea","allUnits","allAvailableUnits","setState","this","onChange","e","target","style","height","float","src","onClick","reverse","clone","getUnitMostRecentPrice","type","checked","includes","newUnits","push","uniq","without","filter","name","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5190a1d2.chunk.js","sourcesContent":["export default () => new Promise((resolve, reject) => {\n    fetch('/toc.json').then(result => {\n        result.json().then(toc => {\n            var dataPromises = toc.timestamps.map(timestamp => {\n                return fetch('/' + timestamp + '.json').then(result => result.json())\n            })\n\n            Promise.all(dataPromises).then(data => {\n                resolve(data)\n            }).catch(err => reject(err))\n        })\n    })\n})","import _ from 'lodash'\n\nvar getAllUnits = () => {\n    var units = {}\n    window.data.forEach((d) => d.data.forEach(unit => units[unit.unit_number] = true))\n\n    return Object.keys(units)\n}\n\nvar getAllUnitsArea = () => {\n    var units = {}\n    window.data.forEach((d) => d.data.forEach(unit => units[unit.unit_number] = unit.area))\n\n    return units\n}\n\nvar getAllAvailableUnits = () => {\n    return window.data[window.data.length - 1].data.map(unit => unit.unit_number)\n}\n\nvar getUnitsData = (unit, date) => {\n    var unitData = {}\n    window.data.forEach((d) => {\n        var u = d.data.find((i) => i.unit_number === unit)\n        if(u) {\n            var dateObj = new Date(d.date)\n            var value = dateObj.getUTCFullYear() + '-' + (dateObj.getUTCMonth() + 1) + '-' + dateObj.getDate()\n            unitData[value] = u.price[date]\n        }\n    })\n\n    return unitData\n}\n\nvar getUnitMostRecentPrice = (unit, date) => {\n    var value\n    _.find(_.reverse(_.clone(window.data)), (d) => {\n        var data = d.data.find((i) => i.unit_number === unit)\n\n        if(data) {\n            value = data.price[date]\n            return data.price[date]\n        }\n    })\n\n    return value\n}\n\nvar getUnitPrices = (unit, date) => {\n    return _.compact(window.data.map((d) => {\n        var data = d.data.find((i) => i.unit_number === unit)\n\n        if(data) {\n            return data.price[date]\n        }\n    }))\n}\n\n\nexport {getAllUnits, getAllAvailableUnits, getAllUnitsArea, getUnitsData, getUnitMostRecentPrice, getUnitPrices}","import React from 'react';\nimport './App.css';\nimport getRawData from './getRawData'\nimport _ from 'lodash'\nimport { LineChart } from 'react-chartkick'\nimport 'chart.js'\nimport {getAllUnits, getUnitsData, getAllUnitsArea, getAllAvailableUnits, getUnitMostRecentPrice, getUnitPrices} from './utils'\n\nclass App extends React.Component {\n  state = {\n    hasData: false,\n    moveInDate: 13,\n    units: [],\n  }\n\n  constructor(props) {\n    super(props)\n    getRawData().then(data => {\n      window.data = data\n      window.allUnitsArea = getAllUnitsArea()\n      window.allUnits = getAllUnits()\n      window.allAvailableUnits = getAllAvailableUnits()\n      this.setState({\n        hasData: true,\n        units: getAllUnits()\n      })\n    })\n  }\n\n  getDifference = (unit) => {\n    var prices = getUnitPrices(unit, this.state.moveInDate)\n\n    if(prices.length > 1) {\n      return prices[prices.length - 1] - prices[prices.length - 2]\n    }\n  }\n\n  render() {\n    if(!this.state.hasData) return <div>Loading....</div>\n    return (\n      <div>\n        February <select value={this.state.moveInDate} onChange={(e) => {\n          this.setState({moveInDate: e.target.value})\n        }}>\n          {[4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27].map(i => <option value={i}>{i}</option>)}\n        </select>\n        <img style={{\n          height: '460px',\n          float: 'right',\n          'margin-right': '30%'\n        }}src={'map.png'}></img>\n\n        <div>\n          <button onClick={() => {\n            if(this.state.units.length) {\n              this.setState({units: []})\n            }\n            else {\n              this.setState({\n                units: getAllUnits()\n              })\n            }\n          }}>Toggle</button>\n          <div>Available:</div>\n          {window.allAvailableUnits.map(unit => (\n            <div>{unit + ': ' + window.allUnitsArea[unit] + ' : $' + (getUnitMostRecentPrice(unit, this.state.moveInDate) || '---') + ' Difference: $' + this.getDifference(unit)}\n              <input type='checkbox' checked={this.state.units.includes(unit)} onChange={(e) => {\n                var newUnits = this.state.units\n                if(e.target.checked) {\n                  newUnits.push(unit)\n                  newUnits = _.uniq(newUnits)\n                }\n                else {\n                  newUnits = _.without(newUnits, unit)\n                }\n\n                this.setState({units: newUnits})\n              }}></input>\n            </div>\n          ))}\n          <div>Unavailable:</div>\n          {window.allUnits.filter(unit => !window.allAvailableUnits.includes(unit)).map(unit => (\n            <div>{unit + ': ' + window.allUnitsArea[unit]}\n            <input type='checkbox' checked={this.state.units.includes(unit)} onChange={(e) => {\n                var newUnits = this.state.units\n                if(e.target.checked) {\n                  newUnits.push(unit)\n                  newUnits = _.uniq(newUnits)\n                }\n                else {\n                  newUnits = _.without(newUnits, unit)\n                }\n\n                this.setState({units: newUnits})\n              }}></input>\n            </div>\n          ))}\n        </div>\n\n\n        <LineChart\n          data={this.state.units.map(unit => ({\n            name: unit,\n            data: getUnitsData(unit, this.state.moveInDate)\n          }))}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}